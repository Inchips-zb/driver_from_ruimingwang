<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\USB_MSC_916.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\USB_MSC_916.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Mon Apr 10 17:52:26 2023
<BR><P>
<H3>Maximum Stack Usage =        416 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
bsp_usb_event_handler &rArr; bsp_msc_bulk_out &rArr; bsp_msc_get_cbw &rArr; bsp_msc_rw_setup &rArr; bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a> from startup_ing91600.o(.text) referenced from startup_ing91600.o(RESET)
 <LI><a href="#[b]">USB_IrqHandler</a> from peripheral_usb.o(.text.USB_IrqHandler) referenced 2 times from bsp_usb.o(.text.bsp_usb_init)
 <LI><a href="#[2]">__scatterload</a> from init.o(.text) referenced from startup_ing91600.o(.text)
 <LI><a href="#[3]">app_main</a> from main.o(.text.app_main) referenced from startup_ing91600.o(.text)
 <LI><a href="#[c]">bsp_usb_event_handler</a> from bsp_usb.o(.text.bsp_usb_event_handler) referenced 2 times from bsp_usb.o(.text.bsp_usb_init)
 <LI><a href="#[5]">cb_assertion</a> from main.o(.text.cb_assertion) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[4]">cb_hard_fault</a> from main.o(.text.cb_hard_fault) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[6]">cb_heap_out_of_mem</a> from main.o(.text.cb_heap_out_of_mem) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[9]">cb_putc</a> from main.o(.text.cb_putc) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[1]">main</a> from startup_ing91600.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[7]">on_deep_sleep_wakeup</a> from main.o(.text.on_deep_sleep_wakeup) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[8]">query_deep_sleep_allowed</a> from main.o(.text.query_deep_sleep_allowed) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[a]">watchdog_task</a> from main.o(.text.watchdog_task) referenced 2 times from main.o(.text.app_main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6a]"></a>platform_printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_heap_out_of_mem
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_hard_fault
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_assertion
</UL>

<P><STRONG><a name="[43]"></a>platform_set_evt_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[6c]"></a>platform_set_irq_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[72]"></a>vTaskDelay</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchdog_task
</UL>

<P><STRONG><a name="[45]"></a>xTaskCreate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[74]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[75]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[76]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[77]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[78]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[79]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_ing91600.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91600.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_ing91600.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91600.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_write_ep
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_sect
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_ep
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[11]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_request_sense
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_init
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[13]"></a>PINCTRL_EnableAnalog</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, peripheral_pinctrl.o(.text.PINCTRL_EnableAnalog))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = PINCTRL_EnableAnalog &rArr; PINCTRL_SetPadMux &rArr; source_id_on_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SetPadMux
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_Pull
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelUSB
</UL>

<P><STRONG><a name="[15]"></a>PINCTRL_Pull</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, peripheral_pinctrl.o(.text.PINCTRL_Pull))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PINCTRL_Pull
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_EnableAnalog
</UL>

<P><STRONG><a name="[16]"></a>PINCTRL_SelUSB</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, peripheral_pinctrl.o(.text.PINCTRL_SelUSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = PINCTRL_SelUSB &rArr; PINCTRL_EnableAnalog &rArr; PINCTRL_SetPadMux &rArr; source_id_on_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_EnableAnalog
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[14]"></a>PINCTRL_SetPadMux</STRONG> (Thumb, 422 bytes, Stack size 24 bytes, peripheral_pinctrl.o(.text.PINCTRL_SetPadMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PINCTRL_SetPadMux &rArr; source_id_on_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;source_id_on_pin
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_EnableAnalog
</UL>

<P><STRONG><a name="[19]"></a>SYSCTRL_ClearClkGate</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, peripheral_sysctrl.o(.text.SYSCTRL_ClearClkGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SYSCTRL_ClearClkGate &rArr; SYSCTRL_ClkGateCtrl &rArr; set_reg_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClkGateCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
</UL>

<P><STRONG><a name="[1b]"></a>SYSCTRL_ClearClkGateMulti</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, peripheral_sysctrl.o(.text.SYSCTRL_ClearClkGateMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SYSCTRL_ClearClkGateMulti &rArr; SYSCTRL_ClearClkGate &rArr; SYSCTRL_ClkGateCtrl &rArr; set_reg_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGate
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[1d]"></a>SYSCTRL_GetPLLClk</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, peripheral_sysctrl.o(.text.SYSCTRL_GetPLLClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SYSCTRL_GetPLLClk &rArr; SYSCTRL_GetSlowClk
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_GetSlowClk
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[1e]"></a>SYSCTRL_GetSlowClk</STRONG> (Thumb, 162 bytes, Stack size 12 bytes, peripheral_sysctrl.o(.text.SYSCTRL_GetSlowClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCTRL_GetSlowClk
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_GetPLLClk
</UL>

<P><STRONG><a name="[1f]"></a>SYSCTRL_SelectUSBClk</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, peripheral_sysctrl.o(.text.SYSCTRL_SelectUSBClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SYSCTRL_SelectUSBClk &rArr; set_reg_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bits
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[6d]"></a>SYSCTRL_USBPhyConfig</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, peripheral_sysctrl.o(.text.SYSCTRL_USBPhyConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SYSCTRL_USBPhyConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[73]"></a>TMR_WatchDogRestart</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, peripheral_timer.o(.text.TMR_WatchDogRestart))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchdog_task
</UL>

<P><STRONG><a name="[6f]"></a>UART_SendData</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, peripheral_uart.o(.text.UART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>

<P><STRONG><a name="[2c]"></a>USB_CancelTransfert</STRONG> (Thumb, 148 bytes, Stack size 4 bytes, peripheral_usb.o(.text.USB_CancelTransfert))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_CancelTransfert
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEp
</UL>

<P><STRONG><a name="[39]"></a>USB_CheckTransferCondition</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_CheckTransferCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_CheckTransferCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[21]"></a>USB_ClrConfig</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, peripheral_usb.o(.text.USB_ClrConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_ClrConfig &rArr; USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEp
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEp
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReInit
</UL>

<P><STRONG><a name="[24]"></a>USB_ConfigureEp</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, peripheral_usb.o(.text.USB_ConfigureEp))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_ConfigureEp &rArr; USB_EnableEp
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEp
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[26]"></a>USB_ContinueTransfer</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, peripheral_usb.o(.text.USB_ContinueTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_ContinueTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_NewTransfer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetTransferSize
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[29]"></a>USB_CoreReset</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, peripheral_usb.o(.text.USB_CoreReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_CoreReset &rArr; nop
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
</UL>

<P><STRONG><a name="[3f]"></a>USB_DeviceInitialization</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_DeviceInitialization))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
</UL>

<P><STRONG><a name="[40]"></a>USB_DeviceSetThreshold</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_DeviceSetThreshold))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
</UL>

<P><STRONG><a name="[23]"></a>USB_DisableEp</STRONG> (Thumb, 456 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_DisableEp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_DisableEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTXFifo
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CancelTransfert
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrConfig
</UL>

<P><STRONG><a name="[2d]"></a>USB_EP0StatusIn</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, peripheral_usb.o(.text.USB_EP0StatusIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = USB_EP0StatusIn &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSetupPacket
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[30]"></a>USB_EP0StatusOut</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, peripheral_usb.o(.text.USB_EP0StatusOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = USB_EP0StatusOut &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
</UL>

<P><STRONG><a name="[25]"></a>USB_EnableEp</STRONG> (Thumb, 442 bytes, Stack size 4 bytes, peripheral_usb.o(.text.USB_EnableEp))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_EnableEp
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigureEp
</UL>

<P><STRONG><a name="[3b]"></a>USB_FlushRXFifo</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_FlushRXFifo))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReInit
</UL>

<P><STRONG><a name="[2b]"></a>USB_FlushTXFifo</STRONG> (Thumb, 158 bytes, Stack size 4 bytes, peripheral_usb.o(.text.USB_FlushTXFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_FlushTXFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReInit
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEp
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEp
</UL>

<P><STRONG><a name="[65]"></a>USB_GetEp0SetupData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_GetEp0SetupData))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_ep
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[33]"></a>USB_GetMaxPacketSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_GetMaxPacketSize))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetTransferSize
</UL>

<P><STRONG><a name="[32]"></a>USB_GetMaxTransferSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_GetMaxTransferSize))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetTransferSize
</UL>

<P><STRONG><a name="[2f]"></a>USB_GetSetupPacket</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, peripheral_usb.o(.text.USB_GetSetupPacket))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusIn
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetEp0Stall
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[27]"></a>USB_GetTransferSize</STRONG> (Thumb, 448 bytes, Stack size 80 bytes, peripheral_usb.o(.text.USB_GetTransferSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetMaxTransferSize
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetMaxPacketSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StartTransfer
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ContinueTransfer
</UL>

<P><STRONG><a name="[67]"></a>USB_GetTransferedSize</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, peripheral_usb.o(.text.USB_GetTransferedSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_GetTransferedSize
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_ep
</UL>

<P><STRONG><a name="[34]"></a>USB_HandleEp0</STRONG> (Thumb, 432 bytes, Stack size 40 bytes, peripheral_usb.o(.text.USB_HandleEp0))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = USB_HandleEp0 &rArr; USB_EP0StatusOut &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSetupPacket
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusOut
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusIn
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ContinueTransfer
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetEp0Stall
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[36]"></a>USB_InitConfig</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_InitConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_InitConfig &rArr; USB_ResetAndConfig &rArr; USB_CoreReset &rArr; nop
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[b]"></a>USB_IrqHandler</STRONG> (Thumb, 1214 bytes, Stack size 64 bytes, peripheral_usb.o(.text.USB_IrqHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = USB_IrqHandler &rArr; USB_HandleEp0 &rArr; USB_EP0StatusOut &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReInit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_PCStopPhyClcok
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSetupPacket
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusIn
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ContinueTransfer
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CheckTransferCondition
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_usb.o(.text.bsp_usb_init)
</UL>
<P><STRONG><a name="[28]"></a>USB_NewTransfer</STRONG> (Thumb, 278 bytes, Stack size 12 bytes, peripheral_usb.o(.text.USB_NewTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_NewTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StartTransfer
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ContinueTransfer
</UL>

<P><STRONG><a name="[3a]"></a>USB_PCStopPhyClcok</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_PCStopPhyClcok))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_PCStopPhyClcok &rArr; nop
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[38]"></a>USB_ReInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, peripheral_usb.o(.text.USB_ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USB_ReInit &rArr; USB_ClrConfig &rArr; USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetTransfert
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTXFifo
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushRXFifo
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IrqHandler
</UL>

<P><STRONG><a name="[31]"></a>USB_RecvData</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, peripheral_usb.o(.text.USB_RecvData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StartTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusOut
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_ep
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[37]"></a>USB_ResetAndConfig</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_ResetAndConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_ResetAndConfig &rArr; USB_CoreReset &rArr; nop
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetupDataFifo
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetTransfert
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTXFifo
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushRXFifo
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetThreshold
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceInitialization
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CoreReset
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_InitConfig
</UL>

<P><STRONG><a name="[3c]"></a>USB_ResetTransfert</STRONG> (Thumb, 180 bytes, Stack size 4 bytes, peripheral_usb.o(.text.USB_ResetTransfert))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_ResetTransfert
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReInit
</UL>

<P><STRONG><a name="[2e]"></a>USB_SendData</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, peripheral_usb.o(.text.USB_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StartTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StatusIn
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_write_ep
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[35]"></a>USB_SetEp0Stall</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, peripheral_usb.o(.text.USB_SetEp0Stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_SetEp0Stall &rArr; USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSetupPacket
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEp
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HandleEp0
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep_
</UL>

<P><STRONG><a name="[22]"></a>USB_SetStallEp</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, peripheral_usb.o(.text.USB_SetStallEp))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTXFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep_
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_clr_stall_ep_
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetEp0Stall
</UL>

<P><STRONG><a name="[3e]"></a>USB_SetupDataFifo</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, peripheral_usb.o(.text.USB_SetupDataFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_SetupDataFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetAndConfig
</UL>

<P><STRONG><a name="[3d]"></a>USB_StartTransfer</STRONG> (Thumb, 242 bytes, Stack size 48 bytes, peripheral_usb.o(.text.USB_StartTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_NewTransfer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetTransferSize
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
</UL>

<P><STRONG><a name="[42]"></a>apUART_BaudRateSet</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, peripheral_uart.o(.text.apUART_BaudRateSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = apUART_BaudRateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
</UL>

<P><STRONG><a name="[6e]"></a>apUART_Check_TXFIFO_FULL</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, peripheral_uart.o(.text.apUART_Check_TXFIFO_FULL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apUART_Check_TXFIFO_FULL
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>

<P><STRONG><a name="[41]"></a>apUART_Initialize</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, peripheral_uart.o(.text.apUART_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_BaudRateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_uart
</UL>

<P><STRONG><a name="[3]"></a>app_main</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, main.o(.text.app_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = app_main &rArr; setup_peripherals &rArr; bsp_usb_init &rArr; PINCTRL_SelUSB &rArr; PINCTRL_EnableAnalog &rArr; PINCTRL_SetPadMux &rArr; source_id_on_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_evt_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91600.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>bsp_msc_ata_pass_through</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_ata_pass_through))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bsp_msc_ata_pass_through &rArr; bsp_msc_data_in_format &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_write_ep
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_format
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[49]"></a>bsp_msc_bulk_in</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_bulk_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = bsp_msc_bulk_in &rArr; bsp_msc_memory_read &rArr; bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_read
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[4d]"></a>bsp_msc_bulk_out</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, bsp_usb.o(.text.bsp_msc_bulk_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = bsp_msc_bulk_out &rArr; bsp_msc_get_cbw &rArr; bsp_msc_rw_setup &rArr; bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_ep
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_write
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_verify
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[52]"></a>bsp_msc_check_media</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_check_media))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_test_unit_ready
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_rw_setup
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_format_capacity
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_capacity
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_mode_sense6
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_mode_sense10
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_write
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_verify
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_read
</UL>

<P><STRONG><a name="[53]"></a>bsp_msc_clr_stall_ep_</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_clr_stall_ep_))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bsp_msc_clr_stall_ep_ &rArr; USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEp
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[47]"></a>bsp_msc_data_in_format</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_data_in_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bsp_msc_data_in_format &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_service_action_in16
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_request_sense
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_format_capacity
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_capacity
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_mode_sense6
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_mode_sense10
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_inquiry
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_ata_pass_through
</UL>

<P><STRONG><a name="[54]"></a>bsp_msc_data_in_transfer</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_data_in_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = bsp_msc_data_in_transfer &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_write_ep
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_request_sense
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_format_capacity
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_capacity
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_mode_sense6
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_mode_sense10
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_inquiry
</UL>

<P><STRONG><a name="[4f]"></a>bsp_msc_get_cbw</STRONG> (Thumb, 970 bytes, Stack size 32 bytes, bsp_usb.o(.text.bsp_msc_get_cbw))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = bsp_msc_get_cbw &rArr; bsp_msc_rw_setup &rArr; bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_test_unit_ready
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_synchronize_cache
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_start_stop_unit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_service_action_in16
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_rw_setup
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_request_sense
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_format_capacity
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_capacity
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_mode_sense6
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_mode_sense10
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_read
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_media_removal
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_inquiry
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_ata_pass_through
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_out
</UL>

<P><STRONG><a name="[61]"></a>bsp_msc_init</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bsp_msc_init &rArr; program_flash_page &rArr; write_flash_page
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash_page
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>

<P><STRONG><a name="[57]"></a>bsp_msc_inquiry</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, bsp_usb.o(.text.bsp_msc_inquiry))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = bsp_msc_inquiry &rArr; bsp_msc_data_in_format &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_transfer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_format
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[59]"></a>bsp_msc_media_removal</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_usb.o(.text.bsp_msc_media_removal))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bsp_msc_media_removal &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[4a]"></a>bsp_msc_memory_read</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, bsp_usb.o(.text.bsp_msc_memory_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = bsp_msc_memory_read &rArr; bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_write_ep
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_sect
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_in
</UL>

<P><STRONG><a name="[51]"></a>bsp_msc_memory_verify</STRONG> (Thumb, 472 bytes, Stack size 24 bytes, bsp_usb.o(.text.bsp_msc_memory_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = bsp_msc_memory_verify &rArr; bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_read_sect
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_out
</UL>

<P><STRONG><a name="[50]"></a>bsp_msc_memory_write</STRONG> (Thumb, 514 bytes, Stack size 32 bytes, bsp_usb.o(.text.bsp_msc_memory_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = bsp_msc_memory_write &rArr; bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_write_sect
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_out
</UL>

<P><STRONG><a name="[5b]"></a>bsp_msc_mode_sense10</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_mode_sense10))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bsp_msc_mode_sense10 &rArr; bsp_msc_data_in_format &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_transfer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_format
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[5a]"></a>bsp_msc_mode_sense6</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_mode_sense6))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bsp_msc_mode_sense6 &rArr; bsp_msc_data_in_format &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_transfer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_format
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[5d]"></a>bsp_msc_read_capacity</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_read_capacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bsp_msc_read_capacity &rArr; bsp_msc_data_in_format &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_transfer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_format
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[4e]"></a>bsp_msc_read_ep</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, bsp_usb.o(.text.bsp_msc_read_ep))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = bsp_msc_read_ep &rArr; USB_RecvData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetTransferedSize
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEp0SetupData
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_out
</UL>

<P><STRONG><a name="[5c]"></a>bsp_msc_read_format_capacity</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_read_format_capacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bsp_msc_read_format_capacity &rArr; bsp_msc_data_in_format &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_transfer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_format
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[63]"></a>bsp_msc_read_sect</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_usb.o(.text.bsp_msc_read_sect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_msc_read_sect
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_verify
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_read
</UL>

<P><STRONG><a name="[56]"></a>bsp_msc_request_sense</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_request_sense))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bsp_msc_request_sense &rArr; bsp_msc_data_in_format &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_transfer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_format
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[69]"></a>bsp_msc_reset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp_usb.o(.text.bsp_msc_reset))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[5f]"></a>bsp_msc_rw_setup</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, bsp_usb.o(.text.bsp_msc_rw_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = bsp_msc_rw_setup &rArr; bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[5e]"></a>bsp_msc_service_action_in16</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_service_action_in16))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bsp_msc_service_action_in16 &rArr; bsp_msc_data_in_format &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_write_ep
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_format
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[4b]"></a>bsp_msc_set_csw</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_set_csw))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_write_ep
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_test_unit_ready
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_synchronize_cache
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_start_stop_unit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_rw_setup
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_write
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_verify
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_read
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_media_removal
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_format
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_out
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_in
</UL>

<P><STRONG><a name="[4c]"></a>bsp_msc_set_stall_ep</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_set_stall_ep))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = bsp_msc_set_stall_ep &rArr; bsp_msc_set_stall_ep_ &rArr; USB_SetEp0Stall &rArr; USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep_
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_test_unit_ready
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_rw_setup
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_write
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_verify
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_read
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_format
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_out
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_in
</UL>

<P><STRONG><a name="[68]"></a>bsp_msc_set_stall_ep_</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bsp_usb.o(.text.bsp_msc_set_stall_ep_))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = bsp_msc_set_stall_ep_ &rArr; USB_SetEp0Stall &rArr; USB_SetStallEp &rArr; USB_FlushTXFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEp
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetEp0Stall
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_event_handler
</UL>

<P><STRONG><a name="[58]"></a>bsp_msc_start_stop_unit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_usb.o(.text.bsp_msc_start_stop_unit))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bsp_msc_start_stop_unit &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[60]"></a>bsp_msc_synchronize_cache</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_usb.o(.text.bsp_msc_synchronize_cache))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bsp_msc_synchronize_cache &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[55]"></a>bsp_msc_test_unit_ready</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, bsp_usb.o(.text.bsp_msc_test_unit_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = bsp_msc_test_unit_ready &rArr; bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_check_media
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_get_cbw
</UL>

<P><STRONG><a name="[48]"></a>bsp_msc_write_ep</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, bsp_usb.o(.text.bsp_msc_write_ep))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_csw
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_service_action_in16
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_read
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_data_in_transfer
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_ata_pass_through
</UL>

<P><STRONG><a name="[64]"></a>bsp_msc_write_sect</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bsp_usb.o(.text.bsp_msc_write_sect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bsp_msc_write_sect &rArr; program_flash_page &rArr; write_flash_page
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash_page
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_memory_write
</UL>

<P><STRONG><a name="[6b]"></a>bsp_usb_init</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, bsp_usb.o(.text.bsp_usb_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = bsp_usb_init &rArr; PINCTRL_SelUSB &rArr; PINCTRL_EnableAnalog &rArr; PINCTRL_SetPadMux &rArr; source_id_on_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_irq_callback
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_InitConfig
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_USBPhyConfig
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SelectUSBClk
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_GetPLLClk
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelUSB
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[9]"></a>cb_putc</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main.o(.text.cb_putc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cb_putc &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Check_TXFIFO_FULL
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[70]"></a>config_uart</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, main.o(.text.config_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = config_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[7]"></a>on_deep_sleep_wakeup</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(.text.on_deep_sleep_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = on_deep_sleep_wakeup &rArr; setup_peripherals &rArr; bsp_usb_init &rArr; PINCTRL_SelUSB &rArr; PINCTRL_EnableAnalog &rArr; PINCTRL_SetPadMux &rArr; source_id_on_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[62]"></a>program_flash_page</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, eflash.o(.text.program_flash_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = program_flash_page &rArr; write_flash_page
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_page
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_write_sect
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_init
</UL>

<P><STRONG><a name="[8]"></a>query_deep_sleep_allowed</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(.text.query_deep_sleep_allowed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = query_deep_sleep_allowed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[44]"></a>setup_peripherals</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(.text.setup_peripherals))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = setup_peripherals &rArr; bsp_usb_init &rArr; PINCTRL_SelUSB &rArr; PINCTRL_EnableAnalog &rArr; PINCTRL_SetPadMux &rArr; source_id_on_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_uart
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_usb_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_deep_sleep_wakeup
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[71]"></a>write_flash_page</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, eflash.o(.text.write_flash_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = write_flash_page
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash_page
</UL>

<P><STRONG><a name="[81]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[82]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[83]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5]"></a>cb_assertion</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, main.o(.text.cb_assertion))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cb_assertion
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[4]"></a>cb_hard_fault</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, main.o(.text.cb_hard_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = cb_hard_fault
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[6]"></a>cb_heap_out_of_mem</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, main.o(.text.cb_heap_out_of_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cb_heap_out_of_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[a]"></a>watchdog_task</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, main.o(.text.watchdog_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = watchdog_task
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_WatchDogRestart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[c]"></a>bsp_usb_event_handler</STRONG> (Thumb, 1122 bytes, Stack size 104 bytes, bsp_usb.o(.text.bsp_usb_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = bsp_usb_event_handler &rArr; bsp_msc_bulk_out &rArr; bsp_msc_get_cbw &rArr; bsp_msc_rw_setup &rArr; bsp_msc_check_media &rArr; bsp_msc_set_csw &rArr; bsp_msc_write_ep &rArr; USB_SendData &rArr; USB_StartTransfer &rArr; USB_GetTransferSize
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_set_stall_ep_
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_reset
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_clr_stall_ep_
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_out
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_msc_bulk_in
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SendData
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_RecvData
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEp0SetupData
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigureEp
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_usb.o(.text.bsp_usb_init)
</UL>
<P><STRONG><a name="[17]"></a>set_reg_bits</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, peripheral_pinctrl.o(.text.set_reg_bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = set_reg_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SetPadMux
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelUSB
</UL>

<P><STRONG><a name="[18]"></a>source_id_on_pin</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, peripheral_pinctrl.o(.text.source_id_on_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = source_id_on_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SetPadMux
</UL>

<P><STRONG><a name="[1a]"></a>SYSCTRL_ClkGateCtrl</STRONG> (Thumb, 902 bytes, Stack size 32 bytes, peripheral_sysctrl.o(.text.SYSCTRL_ClkGateCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SYSCTRL_ClkGateCtrl &rArr; set_reg_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_reg_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGate
</UL>

<P><STRONG><a name="[1c]"></a>set_reg_bit</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, peripheral_sysctrl.o(.text.set_reg_bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_reg_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClkGateCtrl
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SelectUSBClk
</UL>

<P><STRONG><a name="[20]"></a>set_reg_bits</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, peripheral_sysctrl.o(.text.set_reg_bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_reg_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_SelectUSBClk
</UL>

<P><STRONG><a name="[2a]"></a>nop</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, peripheral_usb.o(.text.nop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_PCStopPhyClcok
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CoreReset
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
